#!/bin/bash

cd `dirname $0` 
mtnc=`pwd` 
# pwd is now maintenance
if [ -d release ];
then
	echo ""
else
	mkdir release
fi


# run in root of pymel dev
cd ../ && mayapy -c "import pymel;import re;print 'current version is', pymel.__version__;assert pymel.__version__ == re.split('[a-z]','$1')[0]"
if [ $? -gt 0 ]; then
	echo "ERROR: current pymel version is not $1"
	exit 1
fi

cd $mtnc

echo "checking completion stubs"
cd $mtnc/../extras/completion/py && python -c "import pymel;assert pymel.__version__ == None"
if [ $? -gt 0 ]; then
	echo "ERROR: python completion stubs are not working"
	exit 1
fi

find $mtnc/../extras/ -type f -name '*.pyc' -exec rm {} \;

#if [ ! -d ../extras/completion/pi ]; then
#	echo "ERROR: wing completion stubs do not exist"
#fi

cd $mtnc/release

VER=$1
RELEASE=pymel-$1
echo $RELEASE
SOURCE=../..

if [ -d $RELEASE ];
then
echo "removing existing folder"
rm -rfd $RELEASE
fi

if [ -f $RELEASE.zip ];
then
echo "removing existing zip"
rm -f $RELEASE.zip
fi

git clone --shared $SOURCE $RELEASE

#svn export https://pymel.googlecode.com/svn/trunk pymel
#svn export https://pymel.googlecode.com/svn/docs pymel/docs

# clean out 2011 stuff til it's released
#rm $RELEASE/pymel/cache/*2011.*

# clean out git stuff
rm -rfd $RELEASE/.git*
rm -rfd $RELEASE/.hg*
rm -rfd $RELEASE/maintenance

echo "copying docs"
rm -rfd $RELEASE/docs
cp -r $SOURCE/docs/build/1.0 $RELEASE/docs

echo "copying stubs"
cp -r $SOURCE/extras/completion $RELEASE/extras/completion

echo "zipping"
zip -rq $RELEASE.zip $RELEASE
#rm -rfd pymel

